/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/admin/items/{itemId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 물품 상세 조회
         * @description ID로 물품을 상세 조회하는 관리자용 API
         */
        get: operations["getItemById"];
        /**
         * 대여 물품 수정
         * @description 대여 물품 정보를 수정하는 관리자용 API
         */
        put: operations["updateItem"];
        post?: never;
        /**
         * 대여 물품 삭제
         * @description 대여 물품을 삭제하는 관리자용 API
         */
        delete: operations["deleteItem"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rentals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 본인의 대여 기록 조회
         * @description 대여 상태 별로 본인의 대여 기록을 조회하는 API
         */
        get: operations["getMemberRentalHistory"];
        put?: never;
        /**
         * 물품 대여 신청
         * @description 물품을 대여 신청하는 사용자용 API
         */
        post: operations["createRental"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rentals/dev": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["createDevRental"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/members/me/fcm-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * FCM 토큰 전송
         * @description 서버 측으로 회원 기기의 FCM 토큰을 전송하는 API
         */
        post: operations["setFCMToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/sign-up": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * (구글 신규 가입 시) 회원가입
         * @description 구글 로그인으로 신규 가입 시 학번, 이름을 받기 위한 회원가입 API
         */
        post: operations["signUp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/admin-login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * (관리자 데스크탑) 로그인
         * @description 관리자 데스크탑 페이지에 접속하기 위한 로그인 API
         */
        post: operations["loginAdmin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/members/payers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 학생회비 납부자 목록 조회
         * @description 학생회비 납부자 목록을 전체 혹은 페이지별로 조회하는 관리자용 API
         */
        get: operations["getAllPayers"];
        put?: never;
        /**
         * 학생회비 납부자 추가
         * @description 학생회비 납부자 데이터를 추가하는 관리자용 API
         */
        post: operations["addPayers"];
        /**
         * 학생회비 납부자 삭제
         * @description 학생회비 납부자를 삭제하는 관리자용 API
         */
        delete: operations["deletePayers"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/members/admins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 관리자 목록 조회
         * @description 관리자 목록을 조회하는 API
         */
        get: operations["getAdminList"];
        put?: never;
        /**
         * 관리자 추가
         * @description 회원을 관리자에 추가하는 API
         */
        post: operations["addAdmins"];
        /**
         * 관리자 삭제
         * @description 관리자 목록에서 회원을 삭제하는 API
         */
        delete: operations["deleteAdmins"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 대여 물품 목록 조회
         * @description 대여 물품 목록을 조회하는 관리자용 API
         */
        get: operations["getAllAdminItems"];
        put?: never;
        /**
         * 대여 물품 등록
         * @description 대여 물품을 등록하는 관리자용 API
         */
        post: operations["addItem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rentals/{rentalHistoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 대여 취소
         * @description 대여 신청을 취소하는 API입니다. 신청한 사용자는 대여 신청을 취소할 수 있습니다.
         */
        patch: operations["cancelRental"];
        trace?: never;
    };
    "/rentals/return/{rentalHistoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 반납 신청
         * @description 대여한 물품의 반납을 신청하는 API입니다. 반납 요청을 통해 대여 상태가 변경됩니다.
         */
        patch: operations["returnRental"];
        trace?: never;
    };
    "/notifications/{notificationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 알림 읽음 처리
         * @description 사용자가 특정 알림을 읽음 처리합니다.
         */
        patch: operations["readNotification"];
        trace?: never;
    };
    "/notifications/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 알림 모두 읽음 처리
         * @description 사용자가 알림을 모두 읽음 처리합니다.
         */
        patch: operations["readAllNotifications"];
        trace?: never;
    };
    "/admin/rentals/{rentalHistoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 대여 상태 변경
         * @description 대여 승인, 대여, 반납 승인, 반납 처리 등을 위해 대여 기록의 상태를 변경하는 관리자용 API
         */
        patch: operations["updateRentalStatus"];
        trace?: never;
    };
    "/rentals/return-required": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 본인의 반납 필요 대여 기록 조회
         * @description 로그인한 사용자의 대여 기록 중, 대여 상태가 RENTAL, RETURN_PENDING, RETURN_CONFIRMED인 항목들을 조회하는 API
         */
        get: operations["getReturnRequiredHistory"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 사용자의 알림 목록 조회
         * @description 로그인한 사용자의 알림 목록을 최신순으로 조회합니다.
         */
        get: operations["getNotifications"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 알림 개수 조회
         * @description 로그인한 사용자의 알림 개수를 조회합니다. (메인 페이지)
         */
        get: operations["getNotificationCount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 대여 물품 목록 조회
         * @description 검색어에 따라 물품 이름에 포함된 단어를 기반으로 대여 물품 목록을 조회합니다.
         */
        get: operations["getItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/rentals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 모든 대여 기록 조회
         * @description 모든 대여 기록을 조회하기 위한 관리자용 API
         */
        get: operations["getAllRentalHistories"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/rentals/dashboard": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 관리자 대시보드 목록 조회
         * @description 관리자 대시보드 페이지 조회를 위한 API
         */
        get: operations["getAllDashboardApplications"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/notifications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 관리자 알림 목록 조회
         * @description 로그인한 사용자의 관리자 알림 목록을 최신순으로 조회합니다.
         */
        get: operations["getAdminNotifications"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 회원 목록 조회
         * @description 회원 목록을 조회하는 API
         */
        get: operations["getAllMembers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/members/payers/excel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 학생회비 납부자 Excel 파일 다운로드
         * @description 학생회비 납부자 데이터를 엑셀 파일로 다운받을 수 있는 관리자용 API
         */
        get: operations["createPayerExcel"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ItemRequest: {
            /**
             * @description 물품 이름
             * @example 우산
             */
            name: string;
            /**
             * @description 물품 타입
             * @example RENTAL
             * @enum {string}
             */
            type: "CONSUMPTION" | "RENTAL";
            /**
             * Format: int32
             * @description 물품 개수
             * @example 10
             */
            count: number;
        };
        ErrorResponse: {
            /**
             * @description 에러 코드
             * @example INTERNAL_SERVER_ERROR
             */
            code: string;
            /**
             * @description 오류 메시지
             * @example 오류 메시지입니다.
             */
            message: string;
            /**
             * Format: int32
             * @description HTTP 응답 코드
             * @example 500
             */
            status: number;
        };
        /** @description 대여 기록 생성 요청 DTO */
        RentalHistoryRequest: {
            /**
             * Format: int64
             * @description 대여할 물품의 ID
             * @example 1
             */
            itemId: number;
            /**
             * Format: int32
             * @description 대여할 물품의 수량
             * @example 1
             */
            count: number;
            /** @description 대여 시작 시간 정보 */
            rentalTime: components["schemas"]["RentalTime"];
            /**
             * @description 중복 대여 무시 여부 (true인 경우 중복 대여 진행)
             * @example false
             */
            ignoreDuplicate: boolean;
        };
        /** @description 대여 시작 시간 (시간 및 분) */
        RentalTime: {
            /**
             * Format: int32
             * @description 대여 시작 시각의 시간(24시간 기준)
             * @example 13
             */
            hour: number;
            /**
             * Format: int32
             * @description 대여 시작 시각의 분
             * @example 0
             */
            minute: number;
        };
        MemberFCMTokenRequest: {
            /** @description 회원의 디바이스 FCM 토큰 */
            token: string;
        };
        SignUpRequest: {
            /**
             * @description 이메일
             * @example test@kookmin.ac.kr
             */
            email: string;
            /**
             * @description 학번
             * @example 20211234
             */
            studentId: string;
            /**
             * @description 이름
             * @example 황수민
             */
            name: string;
        };
        SignUpResponse: {
            /**
             * @description 액세스 토큰
             * @example eySdjeofjaeSfjeoaerrglbvklmsMsldfl
             */
            accessToken: string;
        };
        AdminLoginRequest: {
            studentId: string;
            password: string;
        };
        AdminLoginResponse: {
            accessToken: string;
        };
        PayerItem: {
            /**
             * @description 납부자 이름
             * @example 황수민
             */
            name: string;
            /**
             * @description 납부자 학번
             * @example 20211234
             */
            studentId: string;
        };
        PayerRequest: {
            payers: components["schemas"]["PayerItem"][];
        };
        AdminRequest: {
            /**
             * @description 회원 ID 목록
             * @example [
             *       1,
             *       2,
             *       3
             *     ]
             */
            memberIds: number[];
        };
        RentalStatusUpdateRequest: {
            /**
             * @description 변경할 대여 상태
             * @example CONFIRMED
             * @enum {string}
             */
            rentalStatus: "PENDING" | "CANCEL" | "CONFIRMED" | "REJECTED" | "RENTAL" | "RETURN_PENDING" | "RETURN_CONFIRMED" | "RETURNED";
        };
        ItemSummary: {
            /**
             * @description 물품 이름
             * @example 우산
             */
            itemName: string;
            /**
             * @description 물품 아이콘 URL
             * @example https://www.example.com/test.svg
             */
            imageUrl: string;
        };
        MemberSummary: {
            /**
             * @description 회원 이름
             * @example 황수민
             */
            name: string;
            /**
             * @description 회원 학번
             * @example 20211234
             */
            studentId: string;
        };
        /** @description 대여 이력 상세 정보 */
        RentalHistoryDetail: {
            /**
             * Format: int64
             * @description 대여 이력 ID
             * @example 123
             */
            rentalHistoryId: number;
            /** @description 대여한 회원의 요약 정보 */
            member: components["schemas"]["MemberSummary"];
            /** @description 대여한 물품의 요약 정보 */
            item: components["schemas"]["ItemSummary"];
            /**
             * Format: date-time
             * @description 대여 시작 시각
             */
            rentAt: string;
            /**
             * Format: date-time
             * @description 반납 시각 (반납되지 않았으면 null)
             */
            returnedAt?: string;
            /**
             * @description 대여 상태
             * @example PENDING
             * @enum {string}
             */
            rentalStatus: "PENDING" | "CANCEL" | "CONFIRMED" | "REJECTED" | "RENTAL" | "RETURN_PENDING" | "RETURN_CONFIRMED" | "RETURNED";
        };
        /** @description 대여 이력 전체 조회 응답 */
        RentalHistoryFindAllResponse: {
            rentalHistories: components["schemas"]["RentalHistoryDetail"][];
        };
        /** @description 반납이 필요한 물품 상세 정보 */
        ReturnRequiredItemDetail: {
            /** @description 물품 요약 정보 */
            item: components["schemas"]["ItemSummary"];
            /**
             * Format: int32
             * @description 대여 일수 (예: D+1에서의 1)
             * @example 1
             */
            rentalDayCount: number;
        };
        /** @description 반납이 필요한 물품들의 목록 응답 */
        ReturnRequiredItemFindAllResponse: {
            /** @description 반납이 필요한 물품 상세 정보 목록 */
            items: components["schemas"]["ReturnRequiredItemDetail"][];
        };
        NotificationDetail: {
            /** Format: int64 */
            notificationId: number;
            /** @enum {string} */
            status: "ADMIN_RENTAL_APPLY" | "ADMIN_RENTAL_CANCEL" | "ADMIN_RETURN_APPLY" | "ADMIN_RETURN_CANCEL" | "USER_RENTAL_APPLY" | "USER_RENTAL_APPROVED" | "USER_RENTAL_REJECTED" | "USER_RETURN_APPLY" | "USER_RETURN_APPROVED" | "USER_RETURN_COMPLETED";
            title: string;
            message: string;
            link: string;
            isRead: boolean;
            /** Format: date-time */
            createdAt: string;
        };
        NotificationFindAllResponse: {
            messages: components["schemas"]["NotificationDetail"][];
        };
        NotificationCountResponse: {
            /** Format: int32 */
            notificationCount: number;
        };
        ItemDetail: {
            /**
             * Format: int64
             * @description 물품 ID
             * @example 12
             */
            itemId: number;
            /**
             * @description 물품 이름
             * @example 우산
             */
            itemName: string;
            /**
             * @description 물품 타입
             * @example RENTAL
             * @enum {string}
             */
            itemType: "CONSUMPTION" | "RENTAL";
            /**
             * Format: int32
             * @description 물품 개수
             * @example 10
             */
            count: number;
            /**
             * @description 물품 아이콘 URL
             * @example https://www.example.com/test.svg
             */
            imageUrl: string;
        };
        ItemFindAllResponse: {
            items: components["schemas"]["ItemDetail"][];
        };
        AdminRentalHistoryDetail: {
            /** Format: int64 */
            rentalHistoryId: number;
            member: components["schemas"]["MemberSummary"];
            itemName: string;
            /** Format: date-time */
            rentAt: string;
            /** Format: date-time */
            returnedAt?: string;
            /** @enum {string} */
            rentalStatus: "PENDING" | "CANCEL" | "CONFIRMED" | "REJECTED" | "RENTAL" | "RETURN_PENDING" | "RETURN_CONFIRMED" | "RETURNED";
        };
        AdminRentalHistoryFindAllResponse: {
            rentalHistories: components["schemas"]["AdminRentalHistoryDetail"][];
            /**
             * Format: int32
             * @description 총 페이지 수
             * @example 1
             */
            totalPage: number;
        };
        DashboardResponse: {
            applications: components["schemas"]["RentalApplicationDetail"][];
        };
        RentalApplicationDetail: {
            /**
             * Format: int64
             * @description 대여 기록 ID
             * @example 123
             */
            rentalHistoryId: number;
            /**
             * @description 물품 이름
             * @example 우산
             */
            itemName: string;
            /**
             * @description 물품 아이콘 URL
             * @example https://www.example.com/test.svg
             */
            itemImageUrl: string;
            /**
             * Format: int32
             * @description 물품 개수
             * @example 10
             */
            rentedCount: number;
            /**
             * @description 대여자 이름
             * @example 황수민
             */
            renterName: string;
            /**
             * @description 대여자 학번
             * @example 20211234
             */
            renterStudentId: string;
            /**
             * @description 대여 상태
             * @example PENDING
             * @enum {string}
             */
            status: "PENDING" | "CANCEL" | "CONFIRMED" | "REJECTED" | "RENTAL" | "RETURN_PENDING" | "RETURN_CONFIRMED" | "RETURNED";
            /**
             * Format: date-time
             * @description 대여 시각
             */
            rentAt?: string;
        };
        MemberDetail: {
            /**
             * Format: int64
             * @description 회원 ID
             * @example 1
             */
            memberId: number;
            /**
             * @description 회원 이름
             * @example 황수민
             */
            name: string;
            /**
             * @description 회원 학번
             * @example 20211234
             */
            studentId: string;
            /**
             * @description 회원 학생회비 납부 여부
             * @example false
             */
            isFeePaid: boolean;
            /**
             * @description 회원 권한
             * @example USER
             * @enum {string}
             */
            role: "USER" | "ADMIN";
        };
        MemberFindAllResponse: {
            members: components["schemas"]["MemberDetail"][];
            /**
             * Format: int32
             * @description 총 페이지 수
             * @example 1
             */
            totalPage: number;
        };
        PayerFindAllResponse: {
            payers: components["schemas"]["PayerSummary"][];
            /**
             * Format: int32
             * @description 총 페이지 수
             * @example 1
             */
            totalPage: number;
        };
        PayerSummary: {
            /**
             * Format: int64
             * @description 납부자 ID
             * @example 1
             */
            payerId: number;
            /**
             * @description 납부자 이름
             * @example 황수민
             */
            name: string;
            /**
             * @description 납부자 학번
             * @example 20211234
             */
            studentId: string;
            /**
             * @description 서비스 가입 여부
             * @example true
             */
            registered: boolean;
        };
        AdminFindAllResponse: {
            admins: components["schemas"]["AdminMemberDetail"][];
            /**
             * Format: int32
             * @description 총 페이지 수
             * @example 1
             */
            totalPage: number;
        };
        AdminMemberDetail: {
            /**
             * Format: int64
             * @description 관리자 회원 ID
             * @example 1
             */
            memberId: number;
            /**
             * @description 관리자 이름
             * @example 황수민
             */
            name: string;
            /**
             * @description 관리자 학번
             * @example 20211234
             */
            studentId: string;
        };
        AdminItemDetail: {
            /**
             * Format: int64
             * @description 물품 ID
             * @example 12
             */
            itemId: number;
            /**
             * @description 물품 이름
             * @example 우산
             */
            itemName: string;
            /**
             * @description 물품 타입
             * @example RENTAL
             * @enum {string}
             */
            itemType: "CONSUMPTION" | "RENTAL";
            /**
             * Format: int32
             * @description 물품 개수
             * @example 10
             */
            count: number;
            /**
             * Format: int64
             * @description 대여 기록 수
             * @example 20
             */
            renterCount: number;
            /**
             * @description 물품 아이콘 URL
             * @example https://www.example.com/test.svg
             */
            imageUrl: string;
        };
        AdminItemFindAllResponse: {
            items: components["schemas"]["AdminItemDetail"][];
            /**
             * Format: int32
             * @description 총 페이지 수
             * @example 1
             */
            totalPage: number;
        };
        PayerDeleteRequest: {
            /**
             * @description 납부자 ID 목록
             * @example [
             *       1,
             *       2,
             *       3
             *     ]
             */
            payerIds: number[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getItemById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                itemId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대여 물품 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemDetail"];
                };
            };
        };
    };
    updateItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                itemId: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    image: string;
                    itemRequest: components["schemas"]["ItemRequest"];
                };
            };
        };
        responses: {
            /** @description 대여 물품 수정 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 물품 정보가 존재하지 않습니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                itemId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대여 물품 삭제 성공 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 물품 정보가 존재하지 않습니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getMemberRentalHistory: {
        parameters: {
            query?: {
                rentalStatus?: "PENDING" | "CANCEL" | "CONFIRMED" | "REJECTED" | "RENTAL" | "RETURN_PENDING" | "RETURN_CONFIRMED" | "RETURNED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대여 목록 조회 완료 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RentalHistoryFindAllResponse"];
                };
            };
        };
    };
    createRental: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RentalHistoryRequest"];
            };
        };
        responses: {
            /** @description 대여 성공 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createDevRental: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RentalHistoryRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    setFCMToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MemberFCMTokenRequest"];
            };
        };
        responses: {
            /** @description FCM 토큰 전송 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    signUp: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignUpRequest"];
            };
        };
        responses: {
            /** @description 회원가입 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SignUpResponse"];
                };
            };
        };
    };
    loginAdmin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdminLoginRequest"];
            };
        };
        responses: {
            /** @description 로그인 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdminLoginResponse"];
                };
            };
            /** @description 비밀번호가 일치하지 않습니다. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description 권한이 없습니다. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description 회원을 찾을 수 없습니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getAllPayers: {
        parameters: {
            query?: {
                pageNo?: number;
                size?: number;
                criteria?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 학생회비 납부자 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PayerFindAllResponse"];
                };
            };
        };
    };
    addPayers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PayerRequest"];
            };
        };
        responses: {
            /** @description 학생회비 납부자 데이터 추가 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deletePayers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PayerDeleteRequest"];
            };
        };
        responses: {
            /** @description 학생회비 납부자 삭제 성공 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAdminList: {
        parameters: {
            query?: {
                pageNo?: number;
                size?: number;
                criteria?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 관리자 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdminFindAllResponse"];
                };
            };
        };
    };
    addAdmins: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdminRequest"];
            };
        };
        responses: {
            /** @description 관리자 추가 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAdmins: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdminRequest"];
            };
        };
        responses: {
            /** @description 관리자 삭제 성공 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAllAdminItems: {
        parameters: {
            query?: {
                pageNo?: number;
                size?: number;
                criteria?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대여 물품 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdminItemFindAllResponse"];
                };
            };
        };
    };
    addItem: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    image: string;
                    itemRequest: components["schemas"]["ItemRequest"];
                };
            };
        };
        responses: {
            /** @description 대여 물품 등록 성공 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 중복된 물품 이름입니다. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    cancelRental: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                rentalHistoryId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대여 취소 완료 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    returnRental: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                rentalHistoryId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 반납 신청 완료 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    readNotification: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                notificationId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 알림 읽음 처리 완료 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한이 없는 사용자 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 알림을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    readAllNotifications: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 알림 모두 읽음 처리 완료 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한이 없는 사용자 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 알림을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateRentalStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                rentalHistoryId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RentalStatusUpdateRequest"];
            };
        };
        responses: {
            /** @description 대여 상태 변경 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getReturnRequiredHistory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 반납 필요 대여 기록 조회 완료 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReturnRequiredItemFindAllResponse"];
                };
            };
        };
    };
    getNotifications: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 알림 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationFindAllResponse"];
                };
            };
        };
    };
    getNotificationCount: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 개수 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationCountResponse"];
                };
            };
        };
    };
    getItems: {
        parameters: {
            query?: {
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대여 물품 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemFindAllResponse"];
                };
            };
        };
    };
    getAllRentalHistories: {
        parameters: {
            query?: {
                pageNo?: number;
                size?: number;
                criteria?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대여 기록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdminRentalHistoryFindAllResponse"];
                };
            };
        };
    };
    getAllDashboardApplications: {
        parameters: {
            query?: {
                rentalStatus?: "PENDING" | "CANCEL" | "CONFIRMED" | "REJECTED" | "RENTAL" | "RETURN_PENDING" | "RETURN_CONFIRMED" | "RETURNED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 대시보드 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DashboardResponse"];
                };
            };
        };
    };
    getAdminNotifications: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 관리자 알림 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationFindAllResponse"];
                };
            };
        };
    };
    getAllMembers: {
        parameters: {
            query?: {
                pageNo?: number;
                size?: number;
                criteria?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 회원 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberFindAllResponse"];
                };
            };
        };
    };
    createPayerExcel: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 파일 다운로드 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": unknown;
                };
            };
        };
    };
}
